name: DEX deployment to the mainnet env

on:
  push:
    branches:
      - master

jobs:
  deploy:
    if: true
    env:
      ## Public
      APP_NAME: 'Injective Exchange - DeFi DEX | Decentralized Derivatives Trading. Any Market. Anytime. Anywhere.'
      APP_BASE_URL: https://injective.exchange
      APP_NETWORK: mainnetOld
      APP_ENV: mainnet
      APP_CHAIN_ID: 1
      SOURCE_DIR: dist
      DEST_DIR: www

      ## Flags
      GAS_FREE_DEPOSIT_REBATE_ENABLED: true
      META_TAGS_ENABLED: true
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      MAINTENANCE_ENABLED: false
      METRICS_ENABLED: true
      GEO_IP_RESTRICTIONS_ENABLED: true
      TRANSFER_RESTRICTIONS_ENABLED: false
      SHOW_AUCTION_COUNTDOWN: true
      ORDERBOOK_POLLING_ENABLED: false

      ## Endpoints
      APP_EXCHANGE_API_ENDPOINT: ''
      APP_SENTRY_GRPC_ENDPOINT: ''

      ## Secret
      APP_GAS_REBATE_API: ${{ secrets.APP_GAS_REBATE_API }}
      APP_ELEVIO_ID: ${{ secrets.APP_ELEVIO_ID }}
      APP_GOOGLE_ANALYTICS_KEY: ${{ secrets.APP_GOOGLE_ANALYTICS_KEY }}
      APP_GOOGLE_SITE_VERIFICATION_KEY: ${{ secrets.APP_GOOGLE_SITE_VERIFICATION_KEY }},
      APP_FEE_RECIPIENT: ${{ secrets.APP_FEE_RECIPIENT }}
      APP_BUGSNAG_KEY: ${{ secrets.APP_BUGSNAG_KEY }}
      APP_ALCHEMY_KEY: ${{ secrets.APP_ALCHEMY_KEY }}
      APP_ALCHEMY_KOVAN_KEY: ${{ secrets.APP_ALCHEMY_KOVAN_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_MAINNET_BUCKET }}
      CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_MAINNET_DISTRIBUTION_ID }}
      AWS_REGION: ${{ secrets.AWS_MAINNET_REGION }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Using Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Install Dependencies
        run: yarn install

      - name: Building the project
        run: yarn build

      - name: Generating the static pages
        run: yarn generate

      - name: Use AWS CLI
        uses: chrislennon/action-aws-cli@v1.1

      - name: Sync to S3 bucket
        run: aws s3 sync dist/ s3://$AWS_S3_BUCKET/www --follow-symlinks --delete --exclude 'static/chart/*'

      - name: Set Cache Headers
        run: aws s3 cp s3://$AWS_S3_BUCKET/www s3://$AWS_S3_BUCKET/www --exclude "*" --include "*.js" --include "*.css" --include "*.svg" --include "*.woff2" --include "*.woff" --include "*.ttf" --recursive --metadata-directive REPLACE --expires 2034-01-01T00:00:00Z --cache-control max-age=2592000,public

      - name: Invalidate Cloudfront CDN
        run: aws cloudfront create-invalidation --distribution-id=$CLOUDFRONT_DISTRIBUTION_ID --paths "/*"

  deploy-stag:
    if: true
    env:
      ## Public
      APP_NAME: 'STAGING - Injective Exchange - DeFi DEX | Decentralized Derivatives Trading. Any Market. Anytime. Anywhere.'
      APP_BASE_URL: https://staging.injective.exchange
      APP_NETWORK: mainnetOld
      APP_ENV: staging
      APP_CHAIN_ID: 1
      SOURCE_DIR: dist
      DEST_DIR: www

      ## Flags
      GAS_FREE_DEPOSIT_REBATE_ENABLED: true
      META_TAGS_ENABLED: true
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      MAINTENANCE_ENABLED: false
      METRICS_ENABLED: false
      GEO_IP_RESTRICTIONS_ENABLED: true
      TRANSFER_RESTRICTIONS_ENABLED: false
      SHOW_AUCTION_COUNTDOWN: false
      ORDERBOOK_POLLING_ENABLED: false

      ## Endpoints
      APP_EXCHANGE_API_ENDPOINT: ''
      APP_SENTRY_GRPC_ENDPOINT: ''

      ## Secret
      APP_GAS_REBATE_API: ${{ secrets.APP_GAS_REBATE_API }}
      APP_ELEVIO_ID: ${{ secrets.APP_ELEVIO_ID }}
      APP_GOOGLE_ANALYTICS_KEY: ${{ secrets.APP_GOOGLE_ANALYTICS_KEY }}
      APP_GOOGLE_SITE_VERIFICATION_KEY: ${{ secrets.APP_GOOGLE_SITE_VERIFICATION_KEY }},
      APP_FEE_RECIPIENT: ${{ secrets.APP_FEE_RECIPIENT }}
      APP_BUGSNAG_KEY: ${{ secrets.APP_BUGSNAG_KEY }}
      APP_ALCHEMY_KEY: ${{ secrets.APP_ALCHEMY_KEY }}
      APP_ALCHEMY_KOVAN_KEY: ${{ secrets.APP_ALCHEMY_KOVAN_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_STAGING_BUCKET }}
      CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_STAGING_DISTRIBUTION_ID }}
      AWS_REGION: ${{ secrets.AWS_STAGING_REGION }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Using Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Install Dependencies
        run: yarn install

      - name: Building the project
        run: yarn build

      - name: Generating the static pages
        run: yarn generate

      - name: Use AWS CLI
        uses: chrislennon/action-aws-cli@v1.1

      - name: Sync to S3 bucket
        run: aws s3 sync dist/ s3://$AWS_S3_BUCKET/www --follow-symlinks --delete --exclude 'static/chart/*'

      - name: Set Cache Headers
        run: aws s3 cp s3://$AWS_S3_BUCKET/www s3://$AWS_S3_BUCKET/www --exclude "*" --include "*.js" --include "*.css" --include "*.svg" --include "*.woff2" --include "*.woff" --include "*.ttf" --recursive --metadata-directive REPLACE --expires 2034-01-01T00:00:00Z --cache-control max-age=2592000,public

      - name: Invalidate Cloudfront CDN
        run: aws cloudfront create-invalidation --distribution-id=$CLOUDFRONT_DISTRIBUTION_ID --paths "/*"

  deploy-testnet:
    if: true
    env:
      ## Public
      APP_NAME: 'TESTNET - Injective Exchange - DeFi DEX | Decentralized Derivatives Trading. Any Market. Anytime. Anywhere.'
      APP_BASE_URL: https://testnet.injective.exchange
      APP_NETWORK: testnet
      APP_ENV: testnet
      APP_CHAIN_ID: 42
      SOURCE_DIR: dist
      DEST_DIR: www

      ## Flags
      GAS_FREE_DEPOSIT_REBATE_ENABLED: false
      META_TAGS_ENABLED: true
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      MAINTENANCE_ENABLED: false
      METRICS_ENABLED: false
      GEO_IP_RESTRICTIONS_ENABLED: false
      TRANSFER_RESTRICTIONS_ENABLED: false
      SHOW_AUCTION_COUNTDOWN: false
      ORDERBOOK_POLLING_ENABLED: false

      ## Endpoints
      APP_EXCHANGE_API_ENDPOINT: ''
      APP_SENTRY_GRPC_ENDPOINT: ''

      ## Secret
      APP_GAS_REBATE_API: ${{ secrets.APP_GAS_REBATE_API }}
      APP_ELEVIO_ID: ${{ secrets.APP_ELEVIO_ID }}
      APP_GOOGLE_ANALYTICS_KEY: ${{ secrets.APP_GOOGLE_ANALYTICS_KEY }}
      APP_GOOGLE_SITE_VERIFICATION_KEY: ${{ secrets.APP_GOOGLE_SITE_VERIFICATION_KEY }},
      APP_FEE_RECIPIENT: ${{ secrets.APP_FEE_RECIPIENT }}
      APP_BUGSNAG_KEY: ${{ secrets.APP_BUGSNAG_KEY }}
      APP_ALCHEMY_KEY: ${{ secrets.APP_ALCHEMY_KEY }}
      APP_ALCHEMY_KOVAN_KEY: ${{ secrets.APP_ALCHEMY_KOVAN_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_TESTNET_BUCKET }}
      CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_TESTNET_DISTRIBUTION_ID }}
      AWS_REGION: ${{ secrets.AWS_TESTNET_REGION }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Using Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Install Dependencies
        run: yarn install

      - name: Building the project
        run: yarn build

      - name: Generating the static pages
        run: yarn generate

      - name: Use AWS CLI
        uses: chrislennon/action-aws-cli@v1.1

      - name: Sync to S3 bucket
        run: aws s3 sync dist/ s3://$AWS_S3_BUCKET/www --follow-symlinks --delete --exclude 'static/chart/*'

      - name: Set Cache Headers
        run: aws s3 cp s3://$AWS_S3_BUCKET/www s3://$AWS_S3_BUCKET/www --exclude "*" --include "*.js" --include "*.css" --include "*.svg" --include "*.woff2" --include "*.woff" --include "*.ttf" --recursive --metadata-directive REPLACE --expires 2034-01-01T00:00:00Z --cache-control max-age=2592000,public

      - name: Invalidate Cloudfront CDN
        run: aws cloudfront create-invalidation --distribution-id=$CLOUDFRONT_DISTRIBUTION_ID --paths "/*"

  deploy-testnet-stag:
    if: false
    env:
      ## Public
      APP_NAME: 'TESTNET STAGING - Injective Exchange - DeFi DEX | Decentralized Derivatives Trading. Any Market. Anytime. Anywhere.'
      APP_BASE_URL: https://staging-testnet.injective.exchange
      APP_NETWORK: testnet
      APP_ENV: testnet
      APP_CHAIN_ID: 42
      SOURCE_DIR: dist
      DEST_DIR: www

      ## Flags
      GAS_FREE_DEPOSIT_REBATE_ENABLED: false
      META_TAGS_ENABLED: true
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      MAINTENANCE_ENABLED: false
      METRICS_ENABLED: false
      GEO_IP_RESTRICTIONS_ENABLED: false
      TRANSFER_RESTRICTIONS_ENABLED: false
      SHOW_AUCTION_COUNTDOWN: false
      ORDERBOOK_POLLING_ENABLED: false

      ## Endpoints
      APP_EXCHANGE_API_ENDPOINT: ''
      APP_SENTRY_GRPC_ENDPOINT: ''

      ## Secret
      APP_GAS_REBATE_API: ${{ secrets.APP_GAS_REBATE_API }}
      APP_ELEVIO_ID: ${{ secrets.APP_ELEVIO_ID }}
      APP_GOOGLE_ANALYTICS_KEY: ${{ secrets.APP_GOOGLE_ANALYTICS_KEY }}
      APP_GOOGLE_SITE_VERIFICATION_KEY: ${{ secrets.APP_GOOGLE_SITE_VERIFICATION_KEY }},
      APP_FEE_RECIPIENT: ${{ secrets.APP_FEE_RECIPIENT }}
      APP_BUGSNAG_KEY: ${{ secrets.APP_BUGSNAG_KEY }}
      APP_ALCHEMY_KEY: ${{ secrets.APP_ALCHEMY_KEY }}
      APP_ALCHEMY_KOVAN_KEY: ${{ secrets.APP_ALCHEMY_KOVAN_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_STAGING_TESTNET_BUCKET }}
      CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_STAGING_TESTNET_DISTRIBUTION_ID }}
      AWS_REGION: ${{ secrets.AWS_STAGING_REGION }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Using Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Install Dependencies
        run: yarn install

      - name: Building the project
        run: yarn build

      - name: Generating the static pages
        run: yarn generate

      - name: Use AWS CLI
        uses: chrislennon/action-aws-cli@v1.1

      - name: Sync to S3 bucket
        run: aws s3 sync dist/ s3://$AWS_S3_BUCKET/www --follow-symlinks --delete --exclude 'static/chart/*'

      - name: Set Cache Headers
        run: aws s3 cp s3://$AWS_S3_BUCKET/www s3://$AWS_S3_BUCKET/www --exclude "*" --include "*.js" --include "*.css" --include "*.svg" --include "*.woff2" --include "*.woff" --include "*.ttf" --recursive --metadata-directive REPLACE --expires 2034-01-01T00:00:00Z --cache-control max-age=2592000,public

      - name: Invalidate Cloudfront CDN
        run: aws cloudfront create-invalidation --distribution-id=$CLOUDFRONT_DISTRIBUTION_ID --paths "/*"
